{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///./src/js/modules/stat.ts","webpack:///./src/js/index.ts","webpack:///./src/js/utils/subscribe.ts","webpack:///./src/js/modules/renderer.ts"],"names":["root","factory","exports","module","define","amd","a","i","window","installedModules","__webpack_require__","moduleId","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","stat","Stat","start","pc","interval","this","stop","checkIntervalId","setInterval","getStats","then","rawStats","update","emit","clearInterval","Detector","timestamp","timestampStart","packetsLost","frame","decoded","dropped","received","decodedStart","height","width","bytes","receivedStart","bitrate","current","average","low","Infinity","high","framerate","formatBytes","size","receivedBytesMeasurement","dataMeasurements","index","len","length","toFixed","forEach","rawStat","type","isRemote","mediaType","id","bytesReceived","framesDropped","framesReceived","frameWidth","frameHeight","framesDecoded","currentRoundTripTime","toLowerCase","includes","calBitrate","calFrameRate","Math","min","max","assign","events","hasListener","on","names","callback","context","once","concat","push","off","undefined","filter","one","canceled","event","result","apply","data","e","console","log","framerates","shift","bitrates","renderType","renderSpeed","renderFPS","detector","Renderer","generateDom","canvas","generateCanvas","textNode","generateTextNode","ctx","getContext","innerText","appendChild","document","body","initData","autoSwitch","dom","createElement","style","cssText","setAttribute","listen","reset","Array","fill","text","toUpperCase","drawAreaChar","renderText","color","num","edge","wStep","clearRect","beginPath","moveTo","x","y","lineTo","closePath","fillStyle"],"mappings":"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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","import { IStatBitrate, IStatBytes, IStatFrame, IStatFramerate } from '../interface';\nimport Subscribe from '@utils/subscribe';\n\nexport class Detector extends Subscribe {\n    private stat: Stat;\n    private checkIntervalId: number;\n\n    public constructor () {\n        super();\n        this.stat = new Stat();\n    }\n\n    public start (pc: RTCPeerConnection, interval: number) {\n        const { stat } = this;\n        this.stop();\n        if (!interval) return;\n        this.checkIntervalId = window.setInterval(() => {\n            if (!pc) return;\n            pc.getStats(null).then(rawStats => {\n                stat.update(rawStats);\n                this.emit('update', stat);\n            });\n        }, interval);\n    }\n\n    public stop () {\n        if (this.checkIntervalId) {\n            clearInterval(this.checkIntervalId);\n        }\n    }\n}\n\nexport class Stat {\n    public static formatBytes (bytes: number) {\n        let size = bytes;\n        let receivedBytesMeasurement = 'B';\n        const dataMeasurements = [ 'kB', 'MB', 'GB' ];\n        for (let index = 0, len = dataMeasurements.length; index < len; index++) {\n            if (size < 1000) break;\n            size = size / 1000;\n            receivedBytesMeasurement = dataMeasurements[ index ];\n        }\n        return `${ size.toFixed(1) }${ receivedBytesMeasurement }`;\n    }\n\n    public timestamp: number;\n    public timestampStart: number;\n    public packetsLost: number;\n    public currentRoundTripTime: number;\n    public frame: IStatFrame;\n    public bytes: IStatBytes;\n    public bitrate: IStatBitrate;\n    public framerate: IStatFramerate;\n\n    public constructor () {\n        this.timestamp = 0;\n        this.timestampStart = 0;\n        this.packetsLost = 0;\n\n        this.frame = { decoded: 0, dropped: 0, received: 0, decodedStart: 0, height: 0, width: 0 };\n        this.bytes = { received: 0, receivedStart: 0 };\n\n        this.bitrate = { current: 0, average: 0, low: Infinity, high: -Infinity };\n        this.framerate = { current: 0, average: 0, low: Infinity, high: -Infinity };\n    }\n\n    public update (rawStats) {\n        rawStats.forEach(rawStat => {\n            const {\n                type, isRemote, mediaType, id, timestamp, bytesReceived,\n                framesDropped, framesReceived, frameWidth, frameHeight, framesDecoded,\n                packetsLost, currentRoundTripTime,\n            } = rawStat;\n            if (type === 'inbound-rtp' && !isRemote && (mediaType === 'video' || id.toLowerCase().includes('video'))) {\n                this.calBitrate(rawStat);\n                this.calFrameRate(rawStat);\n                this.timestamp = timestamp;\n                this.timestampStart = this.timestampStart || timestamp;\n                this.packetsLost = packetsLost;\n                this.bytes = { received: bytesReceived, receivedStart: this.bytes.receivedStart || bytesReceived };\n            }\n            if (type === 'candidate-pair' && rawStat.hasOwnProperty('currentRoundTripTime')) {\n                this.currentRoundTripTime = currentRoundTripTime;\n            }\n            if (type === 'track') {\n                this.frame = {\n                    dropped: framesDropped,\n                    received: framesReceived,\n                    decoded: framesDecoded,\n                    width: frameWidth,\n                    height: frameHeight,\n                    decodedStart: this.frame.decodedStart || framesDecoded,\n                };\n            }\n        });\n    }\n\n    private calFrameRate (rawStat) {\n        const { decoded, decodedStart } = this.frame;\n        if (decoded && decodedStart) {\n            const current = ~~((rawStat.framesDecoded - decoded) / ((rawStat.timestamp - this.timestamp) / 1000));\n            const low = Math.min(this.framerate.low, current);\n            const high = Math.max(this.framerate.high, current);\n            const average = ~~((rawStat.framesDecoded - decodedStart) / ((rawStat.timestamp - this.timestampStart) / 1000));\n            this.framerate = { current, low, high, average };\n        }\n    }\n\n    private calBitrate (rawStat) {\n        const { timestamp } = this;\n        const { received, receivedStart } = this.bytes;\n        if (received && receivedStart && timestamp) {\n            const current = ~~(8 * (rawStat.bytesReceived - received) / (rawStat.timestamp - timestamp));\n            const low = Math.min(current, this.bitrate.low);\n            const high = Math.max(current, this.bitrate.high);\n            const average = ~~(8 * (rawStat.bytesReceived - receivedStart) / (rawStat.timestamp - this.timestampStart));\n            Object.assign(this.bitrate, { current, low, high, average });\n        }\n    }\n\n}","import * as adapter from 'webrtc-adapter'\n\nexport * from './modules/stat'\nexport * from './modules/renderer'\n","import { Dictionary } from './type';\n\ntype EventNames = string | string[]\nexport type SubscribeCallback = (...args) => (boolean | void)\ntype SubscribeEvent = [ SubscribeCallback, object?, boolean?]\n\nexport default class Subscribe {\n    private events: Dictionary<SubscribeEvent[]>;\n\n    public constructor () {\n        this.events = {};\n    }\n\n    public hasListener (name: string): boolean {\n        const { events } = this;\n        return !!(events && events[ name ] && events[ name ].length > 0);\n    }\n\n    public on (names: string | string[], callback: SubscribeCallback, context?: object, once = false): () => Subscribe {\n        const { events } = this;\n        for (let name of [].concat(names)) {\n            if (!events[ name ]) {\n                events[ name ] = [];\n            }\n            events[ name ].push([ callback, context, once ]);\n        }\n        return () => this.off(names, callback);\n    }\n\n    public off (names?: EventNames, callback?: SubscribeCallback): Subscribe {\n        if (!names && !callback) {\n            this.events = {};\n            return;\n        }\n        const { events } = this;\n        for (let name of [].concat(names)) {\n            if (events[ name ] === undefined) continue;\n            if (callback === undefined) {\n                events[ name ].length = 0;\n                continue;\n            }\n            events[ name ] = events[ name ].filter(one => one[ 0 ] !== callback);\n        }\n        return this;\n    }\n\n    public emit (name: string, ...data): boolean {\n        let canceled = false;\n        const event = this.events[ name ] || [];\n        for (let one of event) {\n            try {\n                const [ callback, context = this, once = false ] = one;\n                const result = callback.apply(context, data);\n                if (once) this.off(name, callback);\n                if (result === false) canceled = true;\n            } catch (e) {\n                console.log(e);\n            }\n        }\n        return canceled;\n    }\n}","// import { Detector } from './stat'\n\nimport { Detector, Stat } from './stat';\n\nconst enum ERenderType {\n    Fps,\n    Bitrate\n}\n\nconst enum EColor {\n    Fps = 'rgb(59, 184, 215)',\n    Bitrate = `rgb(8, 255, 200)`\n}\n\nexport class Renderer {\n    public static generateDom (): HTMLDivElement {\n        const dom = document.createElement('div');\n        dom.style.cssText = `\n            position: fixed;\n            width: 100px;\n            height: 100px;\n            top: 50px;\n            right: 50px;\n            background: rgba(0, 0, 0, .7);\n        `;\n        return dom;\n    }\n\n    public static generateCanvas (): HTMLCanvasElement {\n        const canvas = document.createElement('canvas');\n        canvas.setAttribute('width', '100');\n        canvas.setAttribute('height', '100');\n        canvas.style.cssText = `\n            position: absolute;\n            width: 100%;\n            height: 70px;\n            bottom: 0;\n            left: 0;\n        `;\n        return canvas;\n    }\n\n    public static generateTextNode (): HTMLDivElement {\n        const textNode = document.createElement('div');\n        textNode.style.cssText = `\n            position: absolute;\n            width: 100%;\n            height: 30px;\n            line-height: 30px;\n            font-size: 12px;\n            top: 0;\n            left: 0;\n            background: rgba(4, 18, 169, .5);\n            color: rgba(59, 184, 215);\n        `;\n        return textNode;\n    }\n\n    private root: HTMLDivElement;\n    private canvas: HTMLCanvasElement;\n    private textNode: HTMLDivElement;\n    private ctx: CanvasRenderingContext2D;\n\n    private framerates: number[];\n    private bitrates: number[];\n    private detector: Detector;\n    private renderType: ERenderType;\n    private autoSwitch: number;\n\n    public constructor () {\n        this.detector = undefined;\n        this.root = Renderer.generateDom();\n        this.canvas = Renderer.generateCanvas();\n        this.textNode = Renderer.generateTextNode();\n        this.ctx = this.canvas.getContext('2d');\n\n        this.textNode.innerText = 'No Connect';\n        this.renderType = ERenderType.Fps;\n\n        this.root.appendChild(this.canvas);\n        this.root.appendChild(this.textNode);\n        document.body.appendChild(this.root);\n\n        this.initData();\n        this.autoSwitch = window.setInterval(() => {\n            if (this.renderType === ERenderType.Fps) {\n                this.renderType = ERenderType.Bitrate;\n            } else if (this.renderType === ERenderType.Bitrate) {\n                this.renderType = ERenderType.Fps;\n            }\n        }, 5000);\n    }\n\n    public listen (detector: Detector): void {\n        this.detector = detector;\n        detector.on('update', this.update);\n    }\n\n    public reset () {\n        this.detector.off('update', this.update);\n        this.detector = undefined;\n    }\n\n    private initData () {\n        const dataLength = 51;\n        this.framerates = new Array(dataLength).fill(0);\n        this.bitrates = new Array(dataLength).fill(0);\n    }\n\n    private update = (stat: Stat) => {\n        this.framerates.push(stat.framerate.current);\n        this.framerates.shift();\n        this.bitrates.push(stat.bitrate.current);\n        this.bitrates.shift();\n        switch (this.renderType) {\n            case ERenderType.Bitrate: {\n                this.renderSpeed(stat);\n                break;\n            }\n            case ERenderType.Fps: {\n                this.renderFPS(stat);\n            }\n        }\n    };\n\n\n    private renderSpeed (stat: Stat): void {\n        const { bitrates } = this;\n        const { current } = stat.bitrate;\n        const text = `${ Stat.formatBytes(current).toUpperCase() }/s`;\n        this.drawAreaChar(bitrates, EColor.Bitrate);\n        this.renderText(text, EColor.Bitrate);\n    }\n\n    private renderFPS (stat: Stat): void {\n        const { framerates } = this;\n        const { current, high, low } = stat.framerate;\n        const text = `${ ~~current }FPS(${ low }-${ high })`;\n        this.drawAreaChar(framerates, EColor.Fps);\n        this.renderText(text, EColor.Fps);\n    }\n\n    private renderText (text: string, color: string): void {\n        this.textNode.innerText = text;\n        this.textNode.style.color = color;\n    }\n\n    private drawAreaChar (data: number[], color: string, max?: number, min?: number): void {\n        const { ctx, canvas } = this;\n        const { width, height } = canvas;\n        const edge = {\n            max: max ? max : Math.max(...data),\n            min: min ? min : Math.min(...data),\n        };\n        const calHeight = num => ~~(height - (num - edge.min) / (edge.max - edge.min) * height * .8);\n        const wStep = width / (data.length - 1);\n\n        ctx.clearRect(0, 0, width, height);\n\n        ctx.beginPath();\n        ctx.moveTo(0, height);\n        for (let i = 0, len = data.length; i < len; i++) {\n            const x = i * wStep;\n            const y = calHeight(data[ i ]);\n            ctx.lineTo(x, y);\n        }\n        ctx.lineTo(width, height);\n        ctx.closePath();\n        ctx.fillStyle = color;\n        ctx.fill();\n    }\n}"],"sourceRoot":""}